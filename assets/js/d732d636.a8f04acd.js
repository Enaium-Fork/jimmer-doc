"use strict";(self.webpackChunkdocusaurus_code=self.webpackChunkdocusaurus_code||[]).push([[7162],{13386:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>d,toc:()=>u});var o=t(74848),s=t(28453),i=t(11470),r=t(19365);const a={sidebar_position:9,title:"Other Features"},l=void 0,d={id:"mutation/save-command/other",title:"Other Features",description:"Save Command Result",source:"@site/docs/mutation/save-command/other.mdx",sourceDirName:"mutation/save-command",slug:"/mutation/save-command/other",permalink:"/jimmer-doc/docs/mutation/save-command/other",draft:!1,unlisted:!1,editUrl:"https://github.com/babyfish-ct/jimmer-doc/edit/main/docs/mutation/save-command/other.mdx",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9,title:"Other Features"},sidebar:"tutorialSidebar",previous:{title:"Optimistic/Pessimistic Lock",permalink:"/jimmer-doc/docs/mutation/save-command/lock"},next:{title:"Input DTO",permalink:"/jimmer-doc/docs/mutation/save-command/input-dto/"}},c={},u=[{value:"Save Command Result",id:"save-command-result",level:2},{value:"AppendOnly Mode",id:"appendonly-mode",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"save-command-result",children:"Save Command Result"}),"\n",(0,o.jsxs)(n.p,{children:["The result returned by a save command is an object, e.g. ",(0,o.jsx)(n.code,{children:"SimpleSaveResult<E>/KSimpleSaveResult<E>"})," for the ",(0,o.jsx)(n.code,{children:"save"})," method that saves a single object."]}),"\n",(0,o.jsx)(n.p,{children:"The result supports the following behaviors:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"originalEntity"})," property: Returns the original parameter passed to the ",(0,o.jsx)(n.code,{children:"save"})," method by the developer."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"modifiedEntity"})," property: A data structure identical in shape to ",(0,o.jsx)(n.code,{children:"originalEntity"}),", with the differences:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["If ",(0,o.jsx)(n.code,{children:"originalEntity"})," contains some objects without id properties that rely on id generation strategies ",(0,o.jsx)(n.em,{children:"(e.g. auto increment, sequence, UUID, snowflake id etc.)"}),", the corresponding objects in ",(0,o.jsx)(n.code,{children:"modifiedEntity"})," will necessarily have the id property set to the value automatically assigned by the database/application."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["If some objects belong to entity types with optimistic locking fields, the ",(0,o.jsx)(n.code,{children:"version"})," properties of the corresponding objects in ",(0,o.jsx)(n.code,{children:"modifiedEntity"})," will have the latest version number after modification."]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"modifiedEntity"})," is discussed many times in previous docs, so is not elaborated here."]})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"totalAffectedRowCount"})," property: The execution of a save command may modify multiple tables in the database. This property summarizes the total number of affected rows across all modified tables."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"getAffectedRowCountMap"})," property: A map of affected tables and their affected row counts."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"getAffectedRowCount"})," method, taking a parameter to get the affected row count of the specified table. Accepts two kinds of parameters:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Entity type: Gets affected row count of the table corresponding to this entity type."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Association property based on join table: Gets affected row count of the join table corresponding to this association property."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Let's look at some examples of the ",(0,o.jsx)(n.code,{children:"totalAffectedRowCount"})," property and ",(0,o.jsx)(n.code,{children:"getAffectedRowCount"})," method:"]}),"\n",(0,o.jsxs)(i.A,{groupId:"language",children:[(0,o.jsx)(r.A,{value:"java",label:"Java",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'SimpleSaveResult<Book> result = sqlClient.update(\n        Objects.createBook(draft -> {\n            draft.setId(3L);\n            draft.setPrice(new BigDecimal("59.9"));\n            draft.addIntoAuthors(author -> author.setId(1L));\n            draft.addIntoAuthors(author -> author.setId(3L));\n            draft.addIntoAuthors(author -> {\n                author.setId(1000L); // does not exist, created automatically\n                author.setFirstName("Svetlana");\n                author.setLastName("Isakova");\n                author.setGender(Gender.FEMALE);\n            });\n        })\n);\nSystem.out.println(\n    "Total affected row count: " + \n    // highlight-next-line\n    result.getTotalAffectedRowCount() \n);\nSystem.out.println(\n    "Affected row count for entity table BOOK: " +\n    // highlight-next-line\n    result.getAffectedRowCount(Book.class)\n); \nSystem.out.println(\n    "Affected row count for entity table AUTHOR: " +\n    // highlight-next-line\n    result.getAffectedRowCount(Author.class)\n);\nSystem.out.println(\n    "Affected row count for join table BOOK_AUTHOR_MAPPING: " +\n    // highlight-next-line\n    result.getAffectedRowCount(BookProps.AUTHORS) \n);\n'})})}),(0,o.jsx)(r.A,{value:"kotlin",label:"Kotlin",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:'val result = sqlClient.update(\n    new(Book::class).by {\n        id = 3L\n        price = BigDecimal("59.9"))\n        authors().addBy { id = 1L }\n        authors().addBy { id = 3L }\n        authors().addBy {\n            id = 1000L // does not exist, created automatically\n            firstName = "Svetlana"\n            lastName = "Isakova"\n            gender = Gender.FEMALE\n        }\n    }\n);\nprintln(\n    "Total affected row count: " +\n    // highlight-next-line\n    result.totalAffectedRowCount\n)\nprintln(\n    "Affected row count for entity table BOOK: " +\n    // highlight-next-line\n    result.getAffectedRowCount(Book::class)  \n)\nprintln(\n    "Affected row count for entity table AUTHOR: " + \n    // highlight-next-line\n    result.getAffectedRowCount(Author::class)\n)\nprintln(\n    "Affected row count for join table BOOK_AUTHOR_MAPPING: " +\n    // highlight-next-line  \n    result.getAffectedRowCount(Book::authors)\n)\n'})})})]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["The code ",(0,o.jsx)(n.code,{children:"getAffectedRowCount(BookProps.AUTHORS)"})," is equivalent to ",(0,o.jsx)(n.code,{children:"getAffectedRowCount(AuthorProps.BOOKS)"})]})}),"\n",(0,o.jsx)(n.p,{children:"The printed result is:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"Total affected row count: 5\nAffected row count for entity table BOOK: 1  \nAffected row count for entity table AUTHOR: 1\nAffected row count for join table BOOK_AUTHOR_MAPPING: 3\n"})}),"\n",(0,o.jsx)(n.p,{children:"The explanation is:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["The affected row count for table ",(0,o.jsx)(n.code,{children:"BOOK"})," is 1:"]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"price"})," of the aggregate root object ",(0,o.jsx)(n.code,{children:"Book(id=3L)"})," is modified."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["The affected row count for table ",(0,o.jsx)(n.code,{children:"AUTHOR"})," is 1:"]}),"\n",(0,o.jsxs)(n.p,{children:["The associated object ",(0,o.jsx)(n.code,{children:"Author(id=1000L)"})," does not exist and is created automatically."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["The affected row count for table ",(0,o.jsx)(n.code,{children:"BOOK_AUTHOR_MAPPING"})," is 3:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Dissociation between ",(0,o.jsx)(n.code,{children:"Book(id=3L)"})," and ",(0,o.jsx)(n.code,{children:"Author(id=2L)"})," ",(0,o.jsx)(n.em,{children:"(For dissociation operations on join tables, this is deleting the association)"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["New association between ",(0,o.jsx)(n.code,{children:"Book(id=3L)"})," and ",(0,o.jsx)(n.code,{children:"Author(id=3L)"}),"."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["New association between ",(0,o.jsx)(n.code,{children:"Book(id=3L)"})," and ",(0,o.jsx)(n.code,{children:"Author(id=1000L)"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"appendonly-mode",children:"AppendOnly Mode"}),"\n",(0,o.jsxs)(n.admonition,{type:"warning",children:[(0,o.jsx)(n.p,{children:"This is an immature API provided in early deficient documentation to address the inability of initial users to understand why save commands need keys."}),(0,o.jsx)(n.p,{children:"It violates the core design philosophy of save commands, leading to severely degraded capabilities, and may be removed in the future. Usage should be avoided."})]}),"\n",(0,o.jsx)(n.p,{children:"There are two usage methods:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Set specific association properties to AppendOnly mode"}),"\n",(0,o.jsxs)(i.A,{groupId:"language",children:[(0,o.jsx)(r.A,{value:"java",label:"Java",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"Book book = ...\nsqlClient\n    .getEntities()\n    .saveCommand(book)\n    // highlight-next-line\n    .setAppendOnly(BookProps.AUTHORS)\n    .execute();\n"})})}),(0,o.jsx)(r.A,{value:"kotlin",label:"Kotlin",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:"val book = ...\nsqlClient.saveBook(book) {\n    // highlight-next-line\n    setAppendOnly(BookProps.AUTHORS)\n}\n"})})})]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Set all association properties to AppendOnly mode"}),"\n",(0,o.jsxs)(i.A,{groupId:"language",children:[(0,o.jsx)(r.A,{value:"java",label:"Java",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:"Book book = ...\nsqlClient\n    .getEntities()\n    .saveCommand(book)\n    // highlight-next-line\n    .setAppendOnlyAll()\n    .execute();\n"})})}),(0,o.jsx)(r.A,{value:"kotlin",label:"Kotlin",children:(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-kotlin",children:"val book = ...\nsqlClient.saveBook(book) {\n    // highlight-next-line\n    setAppendOnlyAll()\n}\n"})})})]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Regardless of usage, once enabled, the consequences are:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Idempotency of saving associated objects is lost."}),"\n",(0,o.jsx)(n.p,{children:"This config allows associated objects to have neither id nor key properties, resulting in unconditional insertion of associated objects."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Associated properties lose ",(0,o.jsx)(n.a,{href:"./dissociation",children:"dissociation"})," capability."]}),"\n",(0,o.jsx)(n.p,{children:"This config will only insert or update the associated objects provided by the user, and will not dissociate other associated objects existing in the database but absent from the data structure to be saved."}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.admonition,{type:"info",children:[(0,o.jsx)(n.p,{children:"The author believes this API runs counter to the core philosophy of save commands, and should not be retained."}),(0,o.jsxs)(n.p,{children:["You are welcome to share your insights. Please see ",(0,o.jsx)(n.a,{href:"../../resource/discuss",children:"Discussions"}),"."]})]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},19365:(e,n,t)=>{t.d(n,{A:()=>r});t(96540);var o=t(18215);const s={tabItem:"tabItem_Ymn6"};var i=t(74848);function r(e){let{children:n,hidden:t,className:r}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,o.A)(s.tabItem,r),hidden:t,children:n})}},11470:(e,n,t)=>{t.d(n,{A:()=>A});var o=t(96540),s=t(18215),i=t(23104),r=t(56347),a=t(205),l=t(57485),d=t(31682),c=t(89466);function u(e){return o.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,o.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:o,default:s}}=e;return{value:n,label:t,attributes:o,default:s}}))}(t);return function(e){const n=(0,d.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const s=(0,r.W6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(i),(0,o.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(s.location.search);n.set(i,e),s.replace({...s.location,search:n.toString()})}),[i,s])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,i=h(e),[r,l]=(0,o.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const o=t.find((e=>e.default))??t[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:n,tabValues:i}))),[d,u]=f({queryString:t,groupId:s}),[m,x]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,i]=(0,c.Dv)(t);return[s,(0,o.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:s}),j=(()=>{const e=d??m;return p({value:e,tabValues:i})?e:null})();(0,a.A)((()=>{j&&l(j)}),[j]);return{selectedValue:r,selectValue:(0,o.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),x(e)}),[u,x,i]),tabValues:i}}var x=t(92303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(74848);function g(e){let{className:n,block:t,selectedValue:o,selectValue:r,tabValues:a}=e;const l=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.a_)(),c=e=>{const n=e.currentTarget,t=l.indexOf(n),s=a[t].value;s!==o&&(d(n),r(s))},u=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},n),children:a.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:o===n?0:-1,"aria-selected":o===n,ref:e=>l.push(e),onKeyDown:u,onClick:c,...i,className:(0,s.A)("tabs__item",j.tabItem,i?.className,{"tabs__item--active":o===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:s}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===s));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==s})))})}function y(e){const n=m(e);return(0,b.jsxs)("div",{className:(0,s.A)("tabs-container",j.tabList),children:[(0,b.jsx)(g,{...e,...n}),(0,b.jsx)(v,{...e,...n})]})}function A(e){const n=(0,x.A)();return(0,b.jsx)(y,{...e,children:u(e.children)},String(n))}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var o=t(96540);const s={},i=o.createContext(s);function r(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);